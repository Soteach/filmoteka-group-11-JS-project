function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},i={},s={},a=t.parcelRequired7c6;null==a&&((a=function(e){if(e in i)return i[e].exports;if(e in s){var t=s[e];delete s[e];var a={id:e,exports:{}};return i[e]=a,t.call(a.exports,a,a.exports),a.exports}var l=new Error("Cannot find module '"+e+"'");throw l.code="MODULE_NOT_FOUND",l}).register=function(e,t){s[e]=t},t.parcelRequired7c6=a);var l=a("krGWQ"),n=a("2shzp"),r=a("eWCmQ");const d=document.querySelector(".js-btn-watched"),o=document.querySelector(".js-btn-queue");async function c(){l.refs.spinner.classList.remove("visually-hidden"),d.classList.add("filter__btn--active"),o.classList.remove("filter__btn--active");try{const e=JSON.parse(localStorage.getItem("Watched_KEY"));f(await Promise.all(e.map(u))),l.refs.spinner.classList.add("visually-hidden")}catch(t){return e(r).Notify.failure("Your Watched gallery is empty!"),l.refs.spinner.classList.add("visually-hidden"),void(l.refs.libgallerySet.innerHTML='<li style="width: 100%;"><img class="empty-library" src="./images/NHD.jpg" alt="Nothing found" /></li>')}}function f(e){l.refs.libgallerySet.innerHTML="",e.map((({poster_path:e,genres:t,title:i,original_title:s,release_date:a,first_air_date:l,id:n})=>`<li class="gallery__item" data-id=${n||"No ID"}>\n                <div class="films__img">\n                    <img class="poster" src=https://image.tmdb.org/t/p/original${e?`https://image.tmdb.org/t/p/w400${e}`:"https://image.tmdb.org/t/p/w400/uc4RAVW1T3T29h6OQdr7zu4Blui.jpg"} alt="${i||s||"No title"}" loading="lazy" id=${n}>\n                </div>\n                <div class="film__description" id=${n}>\n                  <p class="film__title" id=${n}>${i||s||"No title"}</p>\n                  <div class="films__meta" id=${n}>\n                    <span class="films__genres" id=${n}>${function(e){const t=[];for(let i=0;i<e.length;i++){const s=Object.values(e[i]);t.push(s[1])}const i=[];if(t.length>3)return i.push(t[0]),i.push(t[1]),i.push("Other"),i.join(", ");return t.join(", ")}(t)||"No genres info"}</span>\n                    \n                    <span class="films__sep" id=${n}>|</span>\n                    <span class="films__data" id=${n}>${new Date(a).getFullYear()||new Date(l).getFullYear()||"No info"}</span>\n                  </div>\n                </div>\n            </li>`)).forEach((e=>l.refs.libgallerySet.insertAdjacentHTML("beforeend",e)))}d.addEventListener("click",c),o.addEventListener("click",(async function(){l.refs.spinner.classList.remove("visually-hidden"),o.classList.add("filter__btn--active"),d.classList.remove("filter__btn--active");try{const e=JSON.parse(localStorage.getItem("Queue_KEY"));f(await Promise.all(e.map(u))),l.refs.spinner.classList.add("visually-hidden")}catch(t){return e(r).Notify.failure("Your Queue gallery is empty!"),l.refs.spinner.classList.add("visually-hidden"),void(l.refs.libgallerySet.innerHTML='<li style="width: 100%;"><img class="empty-library" src="./images/NHD.jpg" alt="Nothing found" /></li>')}}));async function u(e){if(""===e)return;const t=`/movie/${e}?api_key=c3923fa38d2dd62131b577696cc2f23f`;try{return(await n.default.get(`https://api.themoviedb.org/3${t}`)).data}catch(e){console.log(e)}}c();
//# sourceMappingURL=myLibrary.b4d3d116.js.map
